name: "Pluralith Run"
description: Runs the Pluralith CLI and produces an infrastructure diagram based on the latest Terraform state as a PDF. Depends on Pluralith/actions/init
inputs:
  terraform-command:
    description: The Terraform command you want to run (can be plan, apply or destroy)
    required: true
  terraform-path:
    description: The path to your Terraform project directory (where you usually run Terraform plan)
    required: true
  terraform-var-file:
    description: the Path to a Terraform variables file to be passed to Pluralith and used for generating a plan under the hood
    required: false
    default: ""
  title:
    description: The title shown in your exported diagram PDF
    required: false
    default: ""
  version:
    description: The version shown in your exported diagram PDF
    required: false
    default: ""
  export-pdf:
    description: Generate a PDF export of the diagram locally on the pipeline runner
    required: false
    default: false
  show-changes:
    description: Highlight changes in the diagram
    required: false
    default: false
  show-drift:
    description: Highlight drift in the diagram
    required: false
    default: false
  show-costs:
    description: Show cost information in the diagram
    required: false
    default: false
  cost-mode:
    description: Set a cost mode, can be either 'total' or 'delta'
    required: false
    default: delta
  cost-period:
    description: Set a cost period, can be either 'hour' or 'month'
    required: false
    default: month
  cost-usage-file:
    description: The path to an infracost usage file
    required: false
    default: ""
   
runs:
  using: "composite"
  steps:
    - name: Set globals
      id: globals
      shell: bath
      run: |
        echo "PLURALITH_ORG_ID=${{ vars.PLURALITH_ORG_ID }}"
        echo "PLURALITH_PROJECT_ID=${{ vars.PLURALITH_PROJECT_ID }}"
        echo "PLURALITH_API_KEY=${{ secrets.PLURALITH_API_KEY }}"
    - name: Generate Pluralith Diagram
      shell: bash
      run: "pluralith run ${{ inputs.terraform-command }} --var-file=${{ inputs.terraform-var-file }} --title=${{ inputs.title }} --version=${{ inputs.version }} --export-pdf=${{ inputs.export-pdf }} --show-changes=${{ inputs.show-changes }} --show-drift=${{ inputs.show-drift }} --show-costs=${{ inputs.show-costs }} --cost-mode=${{ inputs.cost-mode }} --cost-period=${{ inputs.cost-period }} --cost-usage-file=${{ inputs.cost-usage-file }}"
      working-directory: "${{ inputs.terraform-path }}"
